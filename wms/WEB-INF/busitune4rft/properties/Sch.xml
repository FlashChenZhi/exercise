<?xml version="1.0" encoding="utf-8"?>
<generator>

  <!-- 変数 -->
  <valiable name="superClass">jp.co.daifuku.busitune.rft.haisurf.da.AbstractHSScheduler</valiable>
  <valiable name="imports" type="HashSet"/>
  <valiable name="staticImports" type="HashSet"/>
  <valiable name="fields" type="List"/>
  <valiable name="classVariables" type="List"/>
  <valiable name="instanceVariables" type="List"/>
  <valiable name="constructors" type="List"/>
  <valiable name="publicMethods" type="List"/>
  <valiable name="accessorMethods" type="List"/>
  <valiable name="packageMethods" type="List"/>
  <valiable name="protectedMethods" type="List"/>
  <valiable name="privateMethods" type="List"/>
  <valiable name="utilityMethods" type="List"/>

  <!-- 初期インポート -->
  <set name="imports" select="$superClass"/>
  <set name="imports" select="@resultClass"/>
  <set name="imports" select="@paramsClass"/>

  <!--
    スニペット定義を基準に出力する
    v1.x互換
  -->
  <template test="patterns/pattern[@pattern='Query' or @pattern='QueryList']">
    <set name="imports">java.math.BigDecimal</set>
    <set name="imports">jp.co.daifuku.common.CommonException</set>
    <set name="imports">jp.co.daifuku.common.ReadWriteException</set>
    <set name="imports">jp.co.daifuku.common.text.StringUtil</set>
    <set name="imports">jp.co.daifuku.foundation.common.Params</set>
    <set name="imports">jp.co.daifuku.foundation.common.ScheduleParams</set>
    <set name="imports">jp.co.daifuku.wms.base.common.AbstractSCH</set>
    <set name="imports">jp.co.daifuku.wms.base.common.WmsParam</set>
    <set name="imports">jp.co.daifuku.wms.base.util.DisplayUtil</set>
    <set name="imports">jp.co.daifuku.wms.base.common.WmsMessageFormatter</set>
    <set name="imports">jp.co.daifuku.wms.handler.db.AbstractDBFinder</set>
    <set name="imports">jp.co.daifuku.wms.handler.db.BasicDatabaseFinder</set>
    <set name="imports">jp.co.daifuku.wms.handler.Entity</set>
    <set name="imports">jp.co.daifuku.wms.handler.field.FieldName</set>
    <set name="imports">jp.co.daifuku.wms.handler.SearchKey</set>
    <set name="publicMethods">
<![CDATA[
    /**
     * Receives data that was entered on the screen as parameter,
     * and retrieves output data of the List Area from the database, and return it.<BR>
     *
     * @param p Receiving condition for display data saved in <CODE>ScheduleParams</CODE>.<BR>
     * @return retrieved data saved in <CODE>Params</CODE> array.<BR>
     *          Returns 0 array if no applicable record was found.<BR>
     *          Displays up to the maximum number of display if the retrieved output exceeds the maximum.<BR>
     *          Retuns null if an error occurs in the middle of entering condition.<BR>
     * @throws CommonException Reports if an unexpected exception occurs when checkging.
     */
    public List<Params> query(ScheduleParams p)
            throws CommonException
    {
        try
        {
            List<Params> outparams = new ArrayList<Params>();
            return outparams;
        }
        finally
        {
            // close the db handler
        }
    }

]]>
    </set>
  </template>

  <template test="patterns/pattern[@pattern='Commit' or @pattern='CommitList']">
    <set name="imports">java.math.BigDecimal</set>
    <set name="imports">jp.co.daifuku.common.CommonException</set>
    <set name="imports">jp.co.daifuku.common.ReadWriteException</set>
    <set name="imports">jp.co.daifuku.common.text.StringUtil</set>
    <set name="imports">jp.co.daifuku.foundation.common.Params</set>
    <set name="imports">jp.co.daifuku.foundation.common.ScheduleParams</set>
    <set name="imports">jp.co.daifuku.wms.base.common.AbstractSCH</set>
    <set name="imports">jp.co.daifuku.wms.base.common.WmsParam</set>
    <set name="imports">jp.co.daifuku.wms.base.util.DisplayUtil</set>
    <set name="imports">jp.co.daifuku.wms.base.common.WmsMessageFormatter</set>
    <set name="publicMethods">
<![CDATA[
    /**
     * Receieves the items that was input on the screen as a parameter and start schedule.<BR>
     *
     * @param startParams Setting items saved in <CODE>ScheduleParams</CODE> array.<BR>
     * @throws CommonException Reports all the exceptions.
     * @return Return true if the schedule ends normally and return false if it failed so.
     */
    public boolean startSCH(ScheduleParams... ps)
            throws CommonException
    {
        return true;
    }

]]>
    </set>
  </template>

  <!-- 最終出力 -->
  <template enableLineBreak="true">
    // $Id$
    package <valueof select="package-name(@class)"/>;

    /*
     * Copyright(c) 2000-2011 DAIFUKU Co.,Ltd. All Rights Reserved.
     *
     * This software is the proprietary information of DAIFUKU Co.,Ltd.
     * Use is subject to license terms.
     */
    import java.sql.Connection;
    import java.sql.SQLException;
    import java.util.ArrayList;
    import java.util.List;
    import java.util.Locale;

    import jp.co.daifuku.foundation.common.Params;

    <foreach select="$staticImports">
      <sort select="." order="ascending" dataType="Text"/>
      import static <valueof />.*;<br/>
    </foreach>

    <foreach select="$imports">
      <sort select="." order="ascending" dataType="Text"/>
      import <valueof />;<br/>
    </foreach>

    /**
     *
     * @version $Revision$, $Date$
     * @author  HighTune.
     * @author  Last commit: $Author$
     */
    public class <valueof select="class-name(@class)"/>
            extends <valueof select="class-name($superClass)"/>
    {
        //------------------------------------------------------------
        // fields (upper case only)
        //------------------------------------------------------------
        <foreach select="$fields"/>

        //------------------------------------------------------------
        // class variables (prefix '$')
        //------------------------------------------------------------
        <foreach select="$classVariables"/>

        //------------------------------------------------------------
        // instance variables (prefix '_')
        //------------------------------------------------------------
        <foreach select="$instanceVariables"/>

        //------------------------------------------------------------
        // constructors
        //------------------------------------------------------------
        /**
         * Constructor to create SCH object
         * @param conn Database Connection
         * @param parent Caller Class
         * @param locale Browser Locale
         */
        public <valueof select="class-name(@class)"/>(Connection conn, Class parent, Locale locale)
        {
            super(conn, parent, locale);
        }

        <foreach select="$constructors"/>

        //------------------------------------------------------------
        // public methods
        //------------------------------------------------------------
        <foreach select="$publicMethods"/>

        //------------------------------------------------------------
        // accessor methods
        //------------------------------------------------------------
        <foreach select="$accessorMethods"/>

        //------------------------------------------------------------
        // package methods
        //------------------------------------------------------------
        <foreach select="$packageMethods"/>

        //------------------------------------------------------------
        // protected methods
        //------------------------------------------------------------
        <foreach select="$protectedMethods"/>

        //------------------------------------------------------------
        // private methods
        //------------------------------------------------------------
        <foreach select="$privateMethods"/>

        //------------------------------------------------------------
        // utility methods
        //------------------------------------------------------------
        /**
         * Returns current repository info for this class
         * @return version
         */
        public static String getVersion()
        {
            return "$Id$";
        }

        <foreach select="$utilityMethods"/>
    }
    //end of class
  </template>

</generator>
