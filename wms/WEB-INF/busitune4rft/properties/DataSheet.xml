<?xml version="1.0" encoding="utf-8"?>
<generator>

  <!-- 変数 -->
  <valiable name="superClass">jp.co.daifuku.busitune.rft.haisurf.BasicDSModel</valiable>
  <valiable name="imports" type="HashSet"/>
  <valiable name="fields" type="List"/>

  <!-- 初期インポート -->
  <set name="imports" select="$superClass"/>

  <!-- フィールド -->
  <foreach select="fields/field">
    <choose>
      <when test="@type = 'Boolean'">
        <set name="imports">jp.co.daifuku.busitune.rft.haisurf.DSKey</set>
        <set name="imports">jp.co.daifuku.busitune.rft.haisurf.DSBooleanField</set>
        <set name="fields" xml:space="preserve">
          /** <valueof select="@name"/> */<br/>
          public static final DSKey <valueof select="@name"/> = new DSKey("<valueof select="@name"/>", new DSBooleanField(), <valueof select="@isArray"/>);<br/>
          <br/>
        </set>
      </when>
      <when test="@type = 'Date'">
        <set name="imports">jp.co.daifuku.busitune.rft.haisurf.DSKey</set>
        <set name="imports">jp.co.daifuku.busitune.rft.haisurf.DSDateField</set>
        <foreach select="imports/import">
          <set name="imports" select="."/>
        </foreach>
        <set name="fields" xml:space="preserve">
          /** <valueof select="@name"/> */<br/>
          public static final DSKey <valueof select="@name"/> = new DSKey("<valueof select="@name"/>", new DSDateField(<valueof select="@parameters"/>), <valueof select="@isArray"/>);<br/>
          <br/>
        </set>
      </when>
      <when test="@type = 'Number'">
        <set name="imports">jp.co.daifuku.busitune.rft.haisurf.DSKey</set>
        <set name="imports">jp.co.daifuku.busitune.rft.haisurf.DSNumberField</set>
        <set name="fields" xml:space="preserve">
          /** <valueof select="@name"/> */<br/>
          public static final DSKey <valueof select="@name"/> = new DSKey("<valueof select="@name"/>", new DSNumberField(<valueof select="@format"/>), <valueof select="@isArray"/>);<br/>
          <br/>
        </set>
      </when>
      <when test="@type = 'String'">
        <set name="imports">jp.co.daifuku.busitune.rft.haisurf.DSKey</set>
        <set name="imports">jp.co.daifuku.busitune.rft.haisurf.DSStringField</set>
        <set name="fields" xml:space="preserve">
          /** <valueof select="@name"/> */<br/>
          public static final DSKey <valueof select="@name"/> = new DSKey("<valueof select="@name"/>", new DSStringField(), <valueof select="@isArray"/>, <valueof select="@separateSize"/>);<br/>
          <br/>
        </set>
      </when>
    </choose>
  </foreach>

  <!-- 最終出力 -->
  <template enableLineBreak="true">
    // $Id$
    package <valueof select="package-name(@class)"/>;

    /*
     * Copyright(c) 2000-2011 DAIFUKU Co.,Ltd. All Rights Reserved.
     *
     * This software is the proprietary information of DAIFUKU Co.,Ltd.
     * Use is subject to license terms.
     */
    import java.util.Locale;
    import jp.co.sharedsys.basis.helper.DataSheetFactory;

    <foreach select="$imports">
      <sort select="." order="ascending" dataType="Text"/>
      import <valueof />;<br/>
    </foreach>

    /**
     *
     * @version $Revision$, $Date$
     * @author  HighTune.
     * @author  Last commit: $Author$
     */
    public class <valueof select="class-name(@class)"/>
            extends <valueof select="class-name($superClass)"/>
    {
        //------------------------------------------------------------
        // fields (upper case only)
        //------------------------------------------------------------
        /** DATASHEET_NAME */
        private static final String DATASHEET_NAME = "<valueof select="@name"/>";

        <foreach select="$fields"/>

        //------------------------------------------------------------
        // class variables (prefix '$')
        //------------------------------------------------------------

        //------------------------------------------------------------
        // instance variables (prefix '_')
        //------------------------------------------------------------

        //------------------------------------------------------------
        // constructors
        //------------------------------------------------------------
        /**
         * Default constructor
         *
         * @param dsf DataSheet factory
         * @param locale Locale
         */
        public <valueof select="class-name(@class)"/>(DataSheetFactory dsf, Locale locale)
        {
            super(DATASHEET_NAME, dsf, locale);
        }

        //------------------------------------------------------------
        // public methods
        //------------------------------------------------------------

        //------------------------------------------------------------
        // accessor methods
        //------------------------------------------------------------

        //------------------------------------------------------------
        // package methods
        //------------------------------------------------------------

        //------------------------------------------------------------
        // protected methods
        //------------------------------------------------------------

        //------------------------------------------------------------
        // private methods
        //------------------------------------------------------------

        //------------------------------------------------------------
        // utility methods
        //------------------------------------------------------------
        /**
         * Returns current repository info for this class
         * @return version
         */
        public static String getVersion()
        {
            return "$Id$";
        }
    }
    //end of class
  </template>

</generator>
